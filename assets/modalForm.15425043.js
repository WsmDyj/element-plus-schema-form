var e=(e,n,t)=>new Promise(((l,o)=>{var a=e=>{try{i(t.next(e))}catch(n){o(n)}},s=e=>{try{i(t.throw(e))}catch(n){o(n)}},i=e=>e.done?l(e.value):Promise.resolve(e.value).then(a,s);i((t=t.apply(e,n)).next())}));import{_ as n}from"./schemaForm.cb6d91fe.js";import{u as t}from"./useForm.c0632290.js";import{aA as l,r as o,o as a,c as s,aE as i,aV as r,aW as m,aF as u,aO as c}from"./vendor.74e0f699.js";import"./index.3bc15921.js";const d={class:"markdown-body"},p=i("h2",null,"弹窗表单",-1),f={class:"md-component"},g={class:"md-component-item"},b=c("打开 Dialog"),h={class:"dialog-footer"},v=c("重 置"),F=c("确 定"),y=i("details",null,[i("summary",null,"显示代码"),i("pre",null,[i("code",{class:"language-html"},'<template>\n  <el-button @click="dialogFormVisible = true">打开嵌套表单的 Dialog</el-button>\n  <el-dialog title="收货地址" v-model="dialogFormVisible">\n    <SchemaForm @register="register" />\n    <template #footer>\n      <span class="dialog-footer">\n        <el-button @click="resetFunc">重 置</el-button>\n        <el-button type="primary" @click="onSubmit">确 定</el-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n<script>\n  import { defineComponent } from "vue";\n  import { SchemaForm, useForm } from "element-plus-schema-form";\n  const schemas = [\n    {\n      field: "field1",\n      component: "Input",\n      label: "字段1",\n      required: true,\n    },\n  ];\n  export default defineComponent({\n    components: { SchemaForm },\n    setup() {\n      let dialogFormVisible = ref(false);\n      const resetFunc = async () => {\n        await resetFields();\n      };\n\n      const onSubmit = async () => {\n        const res = await validate();\n        console.log(res);\n        dialogFormVisible.value = false;\n      };\n\n      const [register, { resetFields, validate }] = useForm({\n        schemas,\n        labelWidth: "70px",\n        showActionButtonGroup: false,\n      });\n      return { dialogFormVisible, register };\n    },\n  });\n<\/script>\n')])],-1),V={expose:[],setup(c){const V=()=>e(this,null,(function*(){yield w()})),x=()=>e(this,null,(function*(){const e=yield C();alert(JSON.stringify(e)),S.value=!1,yield w()})),[k,{resetFields:w,validate:C}]=t({schemas:[{field:"field1",component:"Input",label:"字段1",required:!0}],labelWidth:"70px",showActionButtonGroup:!1});let S=l(!1);return(e,t)=>{const l=o("el-button"),c=o("el-dialog");return a(),s("div",d,[p,i("div",f,[i("div",g,[i(l,{onClick:t[1]||(t[1]=e=>r(S)?S.value=!0:S=!0)},{default:m((()=>[b])),_:1}),i(c,{title:"弹窗表单",modelValue:u(S),"onUpdate:modelValue":t[2]||(t[2]=e=>r(S)?S.value=e:S=e),onClose:V},{footer:m((()=>[i("span",h,[i(l,{onClick:V},{default:m((()=>[v])),_:1}),i(l,{type:"primary",onClick:x},{default:m((()=>[F])),_:1})])])),default:m((()=>[i(u(n),{onRegister:u(k)},null,8,["onRegister"])])),_:1},8,["modelValue"])]),y])])}}};export default V;
